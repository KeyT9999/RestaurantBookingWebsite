# Script PowerShell ƒë·ªÉ ch·∫°y SQL PostgreSQL tr√™n Windows

# C·∫•u h√¨nh
$DB_HOST = "localhost"
$DB_PORT = "5432"
$DB_NAME = "restaurant_booking"
$DB_USER = "postgres"
$DB_PASSWORD = "your_password"  # Thay ƒë·ªïi password c·ªßa b·∫°n

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn file SQL
$SQL_FILE = "database/rate_limiting_tables_postgresql.sql"

# Ki·ªÉm tra file SQL c√≥ t·ªìn t·∫°i kh√¥ng
if (-not (Test-Path $SQL_FILE)) {
    Write-Host "‚ùå File SQL kh√¥ng t·ªìn t·∫°i: $SQL_FILE" -ForegroundColor Red
    exit 1
}

Write-Host "üöÄ ƒêang ch·∫°y SQL script cho PostgreSQL..." -ForegroundColor Green
Write-Host "üìÅ File: $SQL_FILE" -ForegroundColor Yellow
Write-Host "üóÑÔ∏è Database: $DB_NAME" -ForegroundColor Yellow

# C√°ch 1: S·ª≠ d·ª•ng psql (n·∫øu c√≥ trong PATH)
try {
    Write-Host "üìù ƒêang ch·∫°y v·ªõi psql..." -ForegroundColor Blue
    
    # Set password environment variable
    $env:PGPASSWORD = $DB_PASSWORD
    
    # Ch·∫°y psql
    $result = & psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f $SQL_FILE 2>&1
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Script ch·∫°y th√†nh c√¥ng!" -ForegroundColor Green
        Write-Host $result
    } else {
        Write-Host "‚ùå L·ªói khi ch·∫°y script:" -ForegroundColor Red
        Write-Host $result
    }
} catch {
    Write-Host "‚ö†Ô∏è psql kh√¥ng c√≥ trong PATH, th·ª≠ c√°ch kh√°c..." -ForegroundColor Yellow
    
    # C√°ch 2: S·ª≠ d·ª•ng ƒë∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß ƒë·∫øn psql
    $PSQL_PATHS = @(
        "C:\Program Files\PostgreSQL\15\bin\psql.exe",
        "C:\Program Files\PostgreSQL\14\bin\psql.exe",
        "C:\Program Files\PostgreSQL\13\bin\psql.exe",
        "C:\Program Files\PostgreSQL\12\bin\psql.exe",
        "C:\Program Files\PostgreSQL\11\bin\psql.exe"
    )
    
    $psqlFound = $false
    
    foreach ($psqlPath in $PSQL_PATHS) {
        if (Test-Path $psqlPath) {
            Write-Host "üìù T√¨m th·∫•y psql t·∫°i: $psqlPath" -ForegroundColor Blue
            
            # Set password environment variable
            $env:PGPASSWORD = $DB_PASSWORD
            
            # Ch·∫°y psql v·ªõi ƒë∆∞·ªùng d·∫´n ƒë·∫ßy ƒë·ªß
            $result = & $psqlPath -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f $SQL_FILE 2>&1
            
            if ($LASTEXITCODE -eq 0) {
                Write-Host "‚úÖ Script ch·∫°y th√†nh c√¥ng!" -ForegroundColor Green
                Write-Host $result
                $psqlFound = $true
                break
            } else {
                Write-Host "‚ùå L·ªói khi ch·∫°y script:" -ForegroundColor Red
                Write-Host $result
            }
        }
    }
    
    if (-not $psqlFound) {
        Write-Host "‚ùå Kh√¥ng t√¨m th·∫•y psql.exe" -ForegroundColor Red
        Write-Host "üí° H∆∞·ªõng d·∫´n th·ªß c√¥ng:" -ForegroundColor Yellow
        Write-Host "1. M·ªü pgAdmin ho·∫∑c psql command line" -ForegroundColor White
        Write-Host "2. K·∫øt n·ªëi ƒë·∫øn database: $DB_NAME" -ForegroundColor White
        Write-Host "3. Ch·∫°y n·ªôi dung file: $SQL_FILE" -ForegroundColor White
        Write-Host "4. Ho·∫∑c copy-paste n·ªôi dung SQL v√†o pgAdmin Query Tool" -ForegroundColor White
    }
}

# X√≥a password kh·ªèi environment variable
Remove-Item Env:PGPASSWORD -ErrorAction SilentlyContinue

Write-Host "`nüéâ Ho√†n th√†nh! B√¢y gi·ªù b·∫°n c√≥ th·ªÉ restart ·ª©ng d·ª•ng Spring Boot." -ForegroundColor Green
