spring:
  profiles:
    active: dev
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/bookeat_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  thymeleaf:
    cache: false
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
  
  messages:
    basename: messages
    encoding: UTF-8
    cache-duration: 3600
  
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 2020MB
  
  # Enable async processing
  task:
    execution:
      pool:
        core-size: 2
        max-size: 10
        queue-capacity: 100

server:
  port: 8080
  
app:
  base-url: http://localhost:8080
  upload:
    dir: uploads
    max-file-size: 20MB
    max-request-size: 2020MB
    use-cloudinary: true  # Set to true when Cloudinary is configured

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME:}
  api-key: ${CLOUDINARY_API_KEY:}
  api-secret: ${CLOUDINARY_API_SECRET:}
  secure: ${CLOUDINARY_SECURE:true}

# Payment configuration
payment:
  payos:
    # PayOS credentials - Updated with real account credentials
    client-id: 59e68d4d-6eb8-4259-93ab-b4c6c3a6af6f
    api-key: 9956541e-86ab-470a-a03c-6d1cc67d95b1
    checksum-key: eb7485ce4c656e02cae0629fcce02b2933d5b2a9b0a10447c9aa0662125835cf
    endpoint: https://api-merchant.payos.vn
    return-url: ${app.base-url}/payment/payos/return
    cancel-url: ${app.base-url}/payment/payos/cancel
    webhook-url: ${app.base-url}/payment/api/payos/webhook
    # Payment link expiration time in minutes (default: 15, max recommended: 1440 = 24 hours)
    expiration-minutes: 1440

# AI Configuration - Simplified for MVP
ai:
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: ${OPENAI_MODEL:gpt-4o-mini}
    timeout-ms: ${OPENAI_TIMEOUT_MS:800}
  
  features:
    enabled: ${AI_ENABLED:true}
    search-enabled: ${AI_SEARCH_ENABLED:true} 

# AI Server Configuration
ai:
  server:
    url: ${AI_SERVER_URL:http://localhost:8000}
    timeout: ${AI_SERVER_TIMEOUT:30000}

logging:
  level:
    org.hibernate.SQL: INFO
    org.springframework.security: INFO
    com.example.booking.service.AIService: DEBUG 